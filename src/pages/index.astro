---
import BaseHead from "../components/BaseHead.astro";
import Cta from "../components/landing/section/Cta.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
        <style>
            /* Custom CSS */
            .gradient-bg {
                background: linear-gradient(
                    135deg,
                    #667eea 0%,
                    #764ba2 25%,
                    #f093fb 50%,
                    #f5576c 75%,
                    #4facfe 100%
                );
                background-size: 400% 400%;
                animation: gradientShift 15s ease infinite;
            }

            @keyframes gradientShift {
                0% {
                    background-position: 0% 50%;
                }
                50% {
                    background-position: 100% 50%;
                }
                100% {
                    background-position: 0% 50%;
                }
            }

            .hero-text {
                background: linear-gradient(135deg, #667eea, #764ba2, #f093fb);
                background-clip: text;
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-size: 300% 300%;
                animation: gradientShift 8s ease infinite;
            }

            .floating {
                animation: float 6s ease-in-out infinite;
            }

            .floating-delay {
                animation: float 6s ease-in-out infinite;
                animation-delay: -3s;
            }

            @keyframes float {
                0%,
                100% {
                    transform: translateY(0px) rotate(0deg);
                }
                33% {
                    transform: translateY(-20px) rotate(120deg);
                }
                66% {
                    transform: translateY(10px) rotate(240deg);
                }
            }

            .card-gradient {
                background: linear-gradient(
                    135deg,
                    rgba(255, 255, 255, 0.1) 0%,
                    rgba(255, 255, 255, 0.05) 100%
                );
                backdrop-filter: blur(10px);
                border: 1px solid rgba(255, 255, 255, 0.1);
                transition: all 0.3s ease;
            }

            .card-gradient:hover {
                background: linear-gradient(
                    135deg,
                    rgba(255, 255, 255, 0.15) 0%,
                    rgba(255, 255, 255, 0.08) 100%
                );
                border: 1px solid rgba(255, 255, 255, 0.2);
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            }

            .pulse-glow {
                box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
                animation: pulseGlow 2s ease-in-out infinite alternate;
            }

            @keyframes pulseGlow {
                from {
                    box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
                }
                to {
                    box-shadow:
                        0 0 30px rgba(255, 255, 255, 0.8),
                        0 0 40px rgba(102, 126, 234, 0.3);
                }
            }

            .navbar-blur {
                transition: all 0.3s ease;
            }

            .section-fade-in {
                opacity: 0;
                transform: translateY(30px);
                transition: all 0.6s ease;
            }

            .section-fade-in.visible {
                opacity: 1;
                transform: translateY(0);
            }

            /* Smooth scroll */
            html {
                scroll-behavior: smooth;
            }

            /* Custom scrollbar */
            ::-webkit-scrollbar {
                width: 8px;
            }

            ::-webkit-scrollbar-track {
                background: #1f2937;
            }

            ::-webkit-scrollbar-thumb {
                background: linear-gradient(135deg, #667eea, #764ba2);
                border-radius: 4px;
            }

            ::-webkit-scrollbar-thumb:hover {
                background: linear-gradient(135deg, #764ba2, #f093fb);
            }
        </style>
    </head>
    <body class="bg-gray-900 text-white overflow-x-hidden">
        <Cta />
    </body>
</html>

<script>
    // Smooth scrolling for navigation links
    document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
        anchor.addEventListener("click", function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute("href"));
            if (target) {
                target.scrollIntoView({
                    behavior: "smooth",
                    block: "start",
                });
            }
        });
    });

    // Add scroll effect to navbar
    window.addEventListener("scroll", () => {
        const navbar = document.querySelector("nav");
        if (navbar && window.scrollY > 100) {
            navbar.classList.add("bg-gray-900");
            navbar.classList.remove("bg-gray-900/80");
        } else if (navbar) {
            navbar.classList.remove("bg-gray-900");
            navbar.classList.add("bg-gray-900/80");
        }
    });

    // Mobile menu toggle
    const mobileMenuBtn = document.getElementById("mobile-menu-btn");
    const mobileMenu = document.getElementById("mobile-menu");

    if (mobileMenuBtn) {
        mobileMenuBtn.addEventListener("click", () => {
            if (mobileMenu) {
                mobileMenu.classList.toggle("hidden");
            }
        });
    }

    // Section fade-in animation on scroll
    const observerOptions = {
        threshold: 0.1,
        rootMargin: "0px 0px -100px 0px",
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                entry.target.classList.add("visible");
            }
        });
    }, observerOptions);

    document.querySelectorAll(".section-fade-in").forEach((section) => {
        observer.observe(section);
    });

    // Add parallax effect to floating elements
    window.addEventListener("scroll", () => {
        const scrolled = window.pageYOffset;
        const parallax = scrolled * 0.5;

        document
            .querySelectorAll(".floating, .floating-delay")
            .forEach((element) => {
                element.style.transform = `translateY(${parallax}px)`;
            });
    });
</script>
